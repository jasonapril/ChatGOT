name: ChatGoT CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-cov
    
    - name: Run tests
      run: |
        python tests/run_all_tests.py --unit-only
    
    - name: Model validation
      run: |
        python scripts/validate_model.py --latest

  process_data:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
    
    - name: Process data
      run: |
        python continue_pipeline.py --stage process --skip-tests
    
    - name: Upload processed data
      uses: actions/upload-artifact@v3
      with:
        name: processed-data
        path: processed_data/

  train_model:
    runs-on: ubuntu-latest
    needs: process_data
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
        # Install optimization dependencies
        pip install bitsandbytes  # For 8-bit optimizers
    
    - name: Download processed data
      uses: actions/download-artifact@v3
      with:
        name: processed-data
        path: processed_data/
    
    - name: Train model (small test run)
      run: |
        # Train with minimal epochs for testing
        python continue_pipeline.py --stage train --skip-tests
    
    - name: Upload trained model
      uses: actions/upload-artifact@v3
      with:
        name: trained-model
        path: models/ 